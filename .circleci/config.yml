version: 2
jobs:
  build:
    docker:
      - image: ghcr.io/h3poteto/elixir-node:1.10.4-node12-slim-buster
        environment:
          DB_HOST: 127.0.0.1
      - image: postgres:11.2-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: seiyu_watch_test

    working_directory: /var/opt/app
    steps:
      - checkout
      - run:
          name: Check elixir version
          command: elixir --version
      - run:
          name: Check node version
          command: node --version
      - restore_cache:
          name: Restoring cache - deps
          keys:
            - vendor-elixir1.9.1-{{ checksum "mix.exs" }}-{{ checksum "mix.lock" }}
            - vendor-elixir1.9.1-{{ checksum "mix.exs" }}-
      - restore_cache:
          name: Restoring cache - _build
          keys:
            - _build-elixir1.9.1-{{ checksum "mix.exs" }}-{{ checksum "mix.lock" }}
            - _build-elixir1.9.1-{{ checksum "mix.exs" }}
      - restore_cache:
          name: Restoring cache - node_modules
          keys:
            - node_modules-node10-{{ checksum "assets/package-lock.json" }}
            - node_modules-node10-
      - run:
          name: Mix packages install
          command: |
            mix local.hex --force
            mix deps.get
      - save_cache:
          name: Saving cache - deps
          key: deps-elixir1.9.1-{{ checksum "mix.exs" }}-{{ checksum "mix.lock" }}
          paths:
            - "deps"
      - run:
          name: Compile deps packages
          command: |
            mix local.rebar --force
            mix deps.compile
      - save_cache:
          name: Saving cache - _build
          key: _build-elixir1.9.1-{{ checksum "mix.exs" }}-{{ checksum "mix.lock" }}
          paths:
            - "_build"
      - run:
          name: Node packages install
          command: |
            cd assets && npm install
      - save_cache:
          name: Saving cache - node_modules
          key: node_modules-node10-{{ checksum "assets/package-lock.json" }}
          paths:
            - "assets/node_modules"
      - run:
          name: Migration database
          command: |
            mix ecto.create
            mix ecto.migrate
      - run:
          name: test
          command: mix test

  image:
    machine: true
    steps:
      - checkout
      - run:
          name: Check docker version
          command: docker version
      - run:
          name: Docker build
          command: |
            docker build -t $AWS_ECR_REPOSITORY:$CIRCLE_SHA1 .
            docker tag $AWS_ECR_REPOSITORY:$CIRCLE_SHA1 $AWS_ECR_REPOSITORY:latest
      - run:
          name: Docker push
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
            docker push $AWS_ECR_REPOSITORY:$CIRCLE_SHA1
            docker push $AWS_ECR_REPOSITORY:latest

  create_pull_request:
    docker:
      - image: circleci/golang:1.15-buster
    steps:
      - run:
          name: Install_hub
          command: |
            curl -sSLf https://github.com/github/hub/releases/download/v2.14.2/hub-linux-amd64-2.14.2.tgz | \
            tar zxf - --strip-components=1 -C /tmp/ && \
            sudo mv /tmp/bin/hub /usr/local/bin/hub
            hub --version
      - run:
          name: Update_tag_and_create_pr
          command: |
            git config --global user.name ${GITHUB_NAME}
            git config --global user.email ${GITHUB_EMAIL}
            git clone https://${GITHUB_NAME}:${GITHUB_TOKEN}@github.com/h3poteto/k8s-services.git
            cd k8s-services
            git init
            git checkout -b update-seiyuwatch-image-${CIRCLE_SHA1}
            sed -i -e "s/\(564677439943\.dkr\.ecr\.ap-northeast-1\.amazonaws\.com\/h3poteto\/seiyuwatch:\)[0-9a-z]\+.*$/\1$CIRCLE_SHA1/g" external-prd/seiyuwatch/deployment.yml
            sed -i -e "s/\(564677439943\.dkr\.ecr\.ap-northeast-1\.amazonaws\.com\/h3poteto\/seiyuwatch:\)[0-9a-z]\+.*$/\1$CIRCLE_SHA1/g" external-prd/seiyuwatch/job.yml
            git add .
            git commit -m "Update docker image for seiyuwatch to ${CIRCLE_SHA1}"
            git push --set-upstream origin update-seiyuwatch-image-${CIRCLE_SHA1}
            hub pull-request -m "[Image update] seiyuwatch ${CIRCLE_SHA1}"


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - image:
          filters:
            branches:
              only:
                - master
      - create_pull_request:
          filters:
            branches:
              only:
                - master
          requires:
            - build
            - image

